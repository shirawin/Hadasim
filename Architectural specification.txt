מפרט ארכיטקטוני של המערכת.

מטרת המערכת: ניהול מאגר קורונה עבור קופת חולים .
המערכת עתידה להציג את רשימת החברים בקופה ותנהל הכנסה של הרשומות במאגר המידע.
כמו כן, המערכת תאגור פרטי מפתח לגבי מגפת הקורונה והחיסונים.

שכבות המערכת :
1. שכבת התצוגה – Presentation Layer:
•	Controller- הם מגיבים לקריאות HTTP  מצד הלקוח ומעבירים אותם לשכבת התחזוקה (Service) 
2. שכבת התחזוקה – Service Layer :
•	Services- מכילים את הלוגיקה העסקית לנהול הנתונים . הם מתקשרים עם ה controllers  משכבת התצוגה ואם ה repositories משכבת המאגר.( Repository Layer ) לביצוע פעולות על הנתונים.
3. שכבת המאגר – Repository Layer : 
•	אחראית על הגישה למסד הנתונים לביצוע פעולות כמו הוספה , עדכון , מחיקה ושליפת הנתונים ממאגר הנתונים. 
 
מאגר הנתונים יכיל את הטבלאות הבאות:
טבלת פרטים אישיים תכיל את השדות הבאים:
-	שם פרטי
-	שם משפחה
-	תעודת זהות
-	עיר מגורים
-	רחוב
-	מספר
-	תאריך לידה
-	טלפון
-	בית
-	טלפון
-	טלפון נייד.
טבלת פרטי קורונה תכיל את השדות הבאים:
-	מזהה (מפתח זר לטבלת פרטים אישיים)
-	תאריך תוצאת חיובית לקורונה
-	תאריך החלמה.
טבלת חיסונים תכיל את השדות הבאים:
-	מזהה(מפתח זר לטבלת פרטים אישיים)
-	תאריך קבלת החיסון
-	יצרן החיסון.

ה API יחשוף את נקודות הקצה הבאות:
-	GET/Members – מחזירה רשימת פרטים אישיים של כל חברי הקופה.
-	GET/Members{id}- מחזירה את פרטיו האישיים של חבר קופה בודד (לפי מזהה)
-	POST/createMember- מוסיפה חבר קופה חדש למערכת
-	GET/ Vaccitaions{id} – מחזירה את פרטי החיסון של חבר בודד (לפי מזהה)
-	POST/ addVaccitaions– מוסיפה פרטי חיסון לחבר בקופה
-	GET/ CoronaVirusDetail{id} – מחזירה את פרטי נגיף הקורונה של חבר בודד (לפי מזהה)
-	POST/ addCoronaVirusDetail – מוסיפה פרטים על נגיף הקורונה עבור חבר בקופה.

דיאגרמה:
 {מצרוף תצלום בנפרד}

שפות וטכנולגיות:
האפליקציה בצד שרת בנויה בשפת C# 
Framework:ASP.NET CORE
מסד נתונים: PostgreSQL.
צד לקוח יתקשר עם ה API  באמצעות בקשות HTTP
